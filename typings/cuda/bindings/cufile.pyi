import _cython_3_1_4
import enum
import numpy.dtypes
from _typeshed import Incomplete
from cuda.bindings.driver import pyCUresult as pyCUresult
from typing import Any, Callable, ClassVar

__pyx_capi__: dict
__test__: dict
batch_io_cancel: _cython_3_1_4.cython_function_or_method
batch_io_destroy: _cython_3_1_4.cython_function_or_method
batch_io_get_status: _cython_3_1_4.cython_function_or_method
batch_io_set_up: _cython_3_1_4.cython_function_or_method
batch_io_submit: _cython_3_1_4.cython_function_or_method
buf_deregister: _cython_3_1_4.cython_function_or_method
buf_register: _cython_3_1_4.cython_function_or_method
descr_dtype: numpy.dtypes.VoidDType
driver_close: _cython_3_1_4.cython_function_or_method
driver_get_properties: _cython_3_1_4.cython_function_or_method
driver_open: _cython_3_1_4.cython_function_or_method
driver_set_max_cache_size: _cython_3_1_4.cython_function_or_method
driver_set_max_direct_io_size: _cython_3_1_4.cython_function_or_method
driver_set_max_pinned_mem_size: _cython_3_1_4.cython_function_or_method
driver_set_poll_mode: _cython_3_1_4.cython_function_or_method
get_parameter_bool: _cython_3_1_4.cython_function_or_method
get_parameter_size_t: _cython_3_1_4.cython_function_or_method
get_parameter_string: _cython_3_1_4.cython_function_or_method
get_version: _cython_3_1_4.cython_function_or_method
handle_deregister: _cython_3_1_4.cython_function_or_method
handle_register: _cython_3_1_4.cython_function_or_method
io_events_dtype: numpy.dtypes.VoidDType
io_params_dtype: numpy.dtypes.VoidDType
op_status_error: _cython_3_1_4.cython_function_or_method
read: _cython_3_1_4.cython_function_or_method
read_async: _cython_3_1_4.cython_function_or_method
set_parameter_bool: _cython_3_1_4.cython_function_or_method
set_parameter_size_t: _cython_3_1_4.cython_function_or_method
set_parameter_string: _cython_3_1_4.cython_function_or_method
stream_deregister: _cython_3_1_4.cython_function_or_method
stream_register: _cython_3_1_4.cython_function_or_method
use_count: _cython_3_1_4.cython_function_or_method
write: _cython_3_1_4.cython_function_or_method
write_async: _cython_3_1_4.cython_function_or_method

class BatchMode(enum.IntEnum):
    __new__: ClassVar[Callable] = ...
    BATCH: ClassVar[BatchMode] = ...
    _generate_next_value_: ClassVar[Callable] = ...
    _member_map_: ClassVar[dict] = ...
    _member_names_: ClassVar[list] = ...
    _member_type_: ClassVar[type[int]] = ...
    _unhashable_values_: ClassVar[list] = ...
    _unhashable_values_map_: ClassVar[dict] = ...
    _use_args_: ClassVar[bool] = ...
    _value2member_map_: ClassVar[dict] = ...
    def __format__(self, *args, **kwargs) -> str: ...

class BoolConfigParameter(enum.IntEnum):
    __new__: ClassVar[Callable] = ...
    EXECUTION_PARALLEL_IO: ClassVar[BoolConfigParameter] = ...
    FORCE_COMPAT_MODE: ClassVar[BoolConfigParameter] = ...
    FORCE_ODIRECT_MODE: ClassVar[BoolConfigParameter] = ...
    FS_MISC_API_CHECK_AGGRESSIVE: ClassVar[BoolConfigParameter] = ...
    PREFER_IO_URING: ClassVar[BoolConfigParameter] = ...
    PROFILE_NVTX: ClassVar[BoolConfigParameter] = ...
    PROPERTIES_ALLOW_COMPAT_MODE: ClassVar[BoolConfigParameter] = ...
    PROPERTIES_ALLOW_SYSTEM_MEMORY: ClassVar[BoolConfigParameter] = ...
    PROPERTIES_USE_POLL_MODE: ClassVar[BoolConfigParameter] = ...
    SKIP_TOPOLOGY_DETECTION: ClassVar[BoolConfigParameter] = ...
    STREAM_MEMOPS_BYPASS: ClassVar[BoolConfigParameter] = ...
    USE_PCIP2PDMA: ClassVar[BoolConfigParameter] = ...
    _generate_next_value_: ClassVar[Callable] = ...
    _member_map_: ClassVar[dict] = ...
    _member_names_: ClassVar[list] = ...
    _member_type_: ClassVar[type[int]] = ...
    _unhashable_values_: ClassVar[list] = ...
    _unhashable_values_map_: ClassVar[dict] = ...
    _use_args_: ClassVar[bool] = ...
    _value2member_map_: ClassVar[dict] = ...
    def __format__(self, *args, **kwargs) -> str: ...

class Descr:
    fs_ops: Incomplete
    handle: _py_anon_pod1_dtype
    ptr: Incomplete
    type: Incomplete
    def __init__(self, size=...) -> Any: ...
    @staticmethod
    def from_data(data) -> Any: ...
    @staticmethod
    def from_ptr(intptr_tptr, size_tsize=..., boolreadonly=...) -> Any: ...
    def __delitem__(self, other) -> None: ...
    def __eq__(self, other: object) -> bool: ...
    def __ge__(self, other: object) -> bool: ...
    def __getitem__(self, index): ...
    def __gt__(self, other: object) -> bool: ...
    def __int__(self) -> int: ...
    def __le__(self, other: object) -> bool: ...
    def __len__(self) -> int: ...
    def __lt__(self, other: object) -> bool: ...
    def __ne__(self, other: object) -> bool: ...
    def __reduce__(self): ...
    def __reduce_cython__(self) -> Any: ...
    def __setitem__(self, index, object) -> None: ...
    def __setstate_cython__(self, __pyx_state) -> Any: ...

class DriverControlFlags(enum.IntEnum):
    __new__: ClassVar[Callable] = ...
    ALLOW_COMPAT_MODE: ClassVar[DriverControlFlags] = ...
    USE_POLL_MODE: ClassVar[DriverControlFlags] = ...
    _generate_next_value_: ClassVar[Callable] = ...
    _member_map_: ClassVar[dict] = ...
    _member_names_: ClassVar[list] = ...
    _member_type_: ClassVar[type[int]] = ...
    _unhashable_values_: ClassVar[list] = ...
    _unhashable_values_map_: ClassVar[dict] = ...
    _use_args_: ClassVar[bool] = ...
    _value2member_map_: ClassVar[dict] = ...
    def __format__(self, *args, **kwargs) -> str: ...

class DriverStatusFlags(enum.IntEnum):
    __new__: ClassVar[Callable] = ...
    BEEGFS_SUPPORTED: ClassVar[DriverStatusFlags] = ...
    GPFS_SUPPORTED: ClassVar[DriverStatusFlags] = ...
    LUSTRE_SUPPORTED: ClassVar[DriverStatusFlags] = ...
    NFS_SUPPORTED: ClassVar[DriverStatusFlags] = ...
    NVMEOF_SUPPORTED: ClassVar[DriverStatusFlags] = ...
    NVMESH_SUPPORTED: ClassVar[DriverStatusFlags] = ...
    NVME_P2P_SUPPORTED: ClassVar[DriverStatusFlags] = ...
    NVME_SUPPORTED: ClassVar[DriverStatusFlags] = ...
    SCALEFLUX_CSD_SUPPORTED: ClassVar[DriverStatusFlags] = ...
    SCATEFS_SUPPORTED: ClassVar[DriverStatusFlags] = ...
    SCSI_SUPPORTED: ClassVar[DriverStatusFlags] = ...
    WEKAFS_SUPPORTED: ClassVar[DriverStatusFlags] = ...
    _generate_next_value_: ClassVar[Callable] = ...
    _member_map_: ClassVar[dict] = ...
    _member_names_: ClassVar[list] = ...
    _member_type_: ClassVar[type[int]] = ...
    _unhashable_values_: ClassVar[list] = ...
    _unhashable_values_map_: ClassVar[dict] = ...
    _use_args_: ClassVar[bool] = ...
    _value2member_map_: ClassVar[dict] = ...
    def __format__(self, *args, **kwargs) -> str: ...

class FeatureFlags(enum.IntEnum):
    __new__: ClassVar[Callable] = ...
    BATCH_IO_SUPPORTED: ClassVar[FeatureFlags] = ...
    DYN_ROUTING_SUPPORTED: ClassVar[FeatureFlags] = ...
    PARALLEL_IO_SUPPORTED: ClassVar[FeatureFlags] = ...
    STREAMS_SUPPORTED: ClassVar[FeatureFlags] = ...
    _generate_next_value_: ClassVar[Callable] = ...
    _member_map_: ClassVar[dict] = ...
    _member_names_: ClassVar[list] = ...
    _member_type_: ClassVar[type[int]] = ...
    _unhashable_values_: ClassVar[list] = ...
    _unhashable_values_map_: ClassVar[dict] = ...
    _use_args_: ClassVar[bool] = ...
    _value2member_map_: ClassVar[dict] = ...
    def __format__(self, *args, **kwargs) -> str: ...

class FileHandleType(enum.IntEnum):
    __new__: ClassVar[Callable] = ...
    OPAQUE_FD: ClassVar[FileHandleType] = ...
    OPAQUE_WIN32: ClassVar[FileHandleType] = ...
    USERSPACE_FS: ClassVar[FileHandleType] = ...
    _generate_next_value_: ClassVar[Callable] = ...
    _member_map_: ClassVar[dict] = ...
    _member_names_: ClassVar[list] = ...
    _member_type_: ClassVar[type[int]] = ...
    _unhashable_values_: ClassVar[list] = ...
    _unhashable_values_map_: ClassVar[dict] = ...
    _use_args_: ClassVar[bool] = ...
    _value2member_map_: ClassVar[dict] = ...
    def __format__(self, *args, **kwargs) -> str: ...

class IOEvents:
    cookie: Incomplete
    ptr: Incomplete
    ret: Incomplete
    status: Incomplete
    def __init__(self, size=...) -> Any: ...
    @staticmethod
    def from_data(data) -> Any: ...
    @staticmethod
    def from_ptr(intptr_tptr, size_tsize=..., boolreadonly=...) -> Any: ...
    def __delitem__(self, other) -> None: ...
    def __eq__(self, other: object) -> bool: ...
    def __ge__(self, other: object) -> bool: ...
    def __getitem__(self, index): ...
    def __gt__(self, other: object) -> bool: ...
    def __int__(self) -> int: ...
    def __le__(self, other: object) -> bool: ...
    def __len__(self) -> int: ...
    def __lt__(self, other: object) -> bool: ...
    def __ne__(self, other: object) -> bool: ...
    def __reduce__(self): ...
    def __reduce_cython__(self) -> Any: ...
    def __setitem__(self, index, object) -> None: ...
    def __setstate_cython__(self, __pyx_state) -> Any: ...

class IOParams:
    cookie: Incomplete
    fh: Incomplete
    mode: Incomplete
    opcode: Incomplete
    ptr: Incomplete
    u: _py_anon_pod2_dtype
    def __init__(self, size=...) -> Any: ...
    @staticmethod
    def from_data(data) -> Any: ...
    @staticmethod
    def from_ptr(intptr_tptr, size_tsize=..., boolreadonly=...) -> Any: ...
    def __delitem__(self, other) -> None: ...
    def __eq__(self, other: object) -> bool: ...
    def __ge__(self, other: object) -> bool: ...
    def __getitem__(self, index): ...
    def __gt__(self, other: object) -> bool: ...
    def __int__(self) -> int: ...
    def __le__(self, other: object) -> bool: ...
    def __len__(self) -> int: ...
    def __lt__(self, other: object) -> bool: ...
    def __ne__(self, other: object) -> bool: ...
    def __reduce__(self): ...
    def __reduce_cython__(self) -> Any: ...
    def __setitem__(self, index, object) -> None: ...
    def __setstate_cython__(self, __pyx_state) -> Any: ...

class OpError(enum.IntEnum):
    __new__: ClassVar[Callable] = ...
    ASYNC_NOT_SUPPORTED: ClassVar[OpError] = ...
    BATCH_FULL: ClassVar[OpError] = ...
    BATCH_SUBMIT_FAILED: ClassVar[OpError] = ...
    CUDA_CONTEXT_MISMATCH: ClassVar[OpError] = ...
    CUDA_DRIVER_ERROR: ClassVar[OpError] = ...
    CUDA_MEMORY_TYPE_INVALID: ClassVar[OpError] = ...
    CUDA_POINTER_INVALID: ClassVar[OpError] = ...
    CUDA_POINTER_RANGE_ERROR: ClassVar[OpError] = ...
    DEVICE_NOT_FOUND: ClassVar[OpError] = ...
    DEVICE_NOT_SUPPORTED: ClassVar[OpError] = ...
    DIO_NOT_SET: ClassVar[OpError] = ...
    DRIVER_ALREADY_OPEN: ClassVar[OpError] = ...
    DRIVER_CLOSING: ClassVar[OpError] = ...
    DRIVER_INVALID_PROPS: ClassVar[OpError] = ...
    DRIVER_NOT_INITIALIZED: ClassVar[OpError] = ...
    DRIVER_UNSUPPORTED_LIMIT: ClassVar[OpError] = ...
    DRIVER_VERSION_MISMATCH: ClassVar[OpError] = ...
    DRIVER_VERSION_READ_ERROR: ClassVar[OpError] = ...
    GETNEWFD_FAILED: ClassVar[OpError] = ...
    GPU_MEMORY_PINNING_FAILED: ClassVar[OpError] = ...
    HANDLE_ALREADY_REGISTERED: ClassVar[OpError] = ...
    HANDLE_NOT_REGISTERED: ClassVar[OpError] = ...
    INTERNAL_ERROR: ClassVar[OpError] = ...
    INVALID_FILE_OPEN_FLAG: ClassVar[OpError] = ...
    INVALID_FILE_TYPE: ClassVar[OpError] = ...
    INVALID_MAPPING_RANGE: ClassVar[OpError] = ...
    INVALID_MAPPING_SIZE: ClassVar[OpError] = ...
    INVALID_VALUE: ClassVar[OpError] = ...
    IO_DISABLED: ClassVar[OpError] = ...
    IO_MAX_ERROR: ClassVar[OpError] = ...
    IO_NOT_SUPPORTED: ClassVar[OpError] = ...
    MEMORY_ALREADY_REGISTERED: ClassVar[OpError] = ...
    MEMORY_NOT_REGISTERED: ClassVar[OpError] = ...
    NVFS_DRIVER_ERROR: ClassVar[OpError] = ...
    NVFS_SETUP_ERROR: ClassVar[OpError] = ...
    PERMISSION_DENIED: ClassVar[OpError] = ...
    PLATFORM_NOT_SUPPORTED: ClassVar[OpError] = ...
    SUCCESS: ClassVar[OpError] = ...
    _generate_next_value_: ClassVar[Callable] = ...
    _member_map_: ClassVar[dict] = ...
    _member_names_: ClassVar[list] = ...
    _member_type_: ClassVar[type[int]] = ...
    _unhashable_values_: ClassVar[list] = ...
    _unhashable_values_map_: ClassVar[dict] = ...
    _use_args_: ClassVar[bool] = ...
    _value2member_map_: ClassVar[dict] = ...
    def __format__(self, *args, **kwargs) -> str: ...

class Opcode(enum.IntEnum):
    __new__: ClassVar[Callable] = ...
    READ: ClassVar[Opcode] = ...
    WRITE: ClassVar[Opcode] = ...
    _generate_next_value_: ClassVar[Callable] = ...
    _member_map_: ClassVar[dict] = ...
    _member_names_: ClassVar[list] = ...
    _member_type_: ClassVar[type[int]] = ...
    _unhashable_values_: ClassVar[list] = ...
    _unhashable_values_map_: ClassVar[dict] = ...
    _use_args_: ClassVar[bool] = ...
    _value2member_map_: ClassVar[dict] = ...
    def __format__(self, *args, **kwargs) -> str: ...

class SizeTConfigParameter(enum.IntEnum):
    __new__: ClassVar[Callable] = ...
    EXECUTION_MAX_IO_QUEUE_DEPTH: ClassVar[SizeTConfigParameter] = ...
    EXECUTION_MAX_IO_THREADS: ClassVar[SizeTConfigParameter] = ...
    EXECUTION_MAX_REQUEST_PARALLELISM: ClassVar[SizeTConfigParameter] = ...
    EXECUTION_MIN_IO_THRESHOLD_SIZE_KB: ClassVar[SizeTConfigParameter] = ...
    POLLTHRESHOLD_SIZE_KB: ClassVar[SizeTConfigParameter] = ...
    PROFILE_STATS: ClassVar[SizeTConfigParameter] = ...
    PROPERTIES_BATCH_IO_TIMEOUT_MS: ClassVar[SizeTConfigParameter] = ...
    PROPERTIES_IO_BATCHSIZE: ClassVar[SizeTConfigParameter] = ...
    PROPERTIES_MAX_DEVICE_CACHE_SIZE_KB: ClassVar[SizeTConfigParameter] = ...
    PROPERTIES_MAX_DEVICE_PINNED_MEM_SIZE_KB: ClassVar[SizeTConfigParameter] = ...
    PROPERTIES_MAX_DIRECT_IO_SIZE_KB: ClassVar[SizeTConfigParameter] = ...
    PROPERTIES_PER_BUFFER_CACHE_SIZE_KB: ClassVar[SizeTConfigParameter] = ...
    _generate_next_value_: ClassVar[Callable] = ...
    _member_map_: ClassVar[dict] = ...
    _member_names_: ClassVar[list] = ...
    _member_type_: ClassVar[type[int]] = ...
    _unhashable_values_: ClassVar[list] = ...
    _unhashable_values_map_: ClassVar[dict] = ...
    _use_args_: ClassVar[bool] = ...
    _value2member_map_: ClassVar[dict] = ...
    def __format__(self, *args, **kwargs) -> str: ...

class Status(enum.IntEnum):
    __new__: ClassVar[Callable] = ...
    CANCELED: ClassVar[Status] = ...
    COMPLETE: ClassVar[Status] = ...
    FAILED: ClassVar[Status] = ...
    INVALID: ClassVar[Status] = ...
    PENDING: ClassVar[Status] = ...
    TIMEOUT: ClassVar[Status] = ...
    WAITING: ClassVar[Status] = ...
    _generate_next_value_: ClassVar[Callable] = ...
    _member_map_: ClassVar[dict] = ...
    _member_names_: ClassVar[list] = ...
    _member_type_: ClassVar[type[int]] = ...
    _unhashable_values_: ClassVar[list] = ...
    _unhashable_values_map_: ClassVar[dict] = ...
    _use_args_: ClassVar[bool] = ...
    _value2member_map_: ClassVar[dict] = ...
    def __format__(self, *args, **kwargs) -> str: ...

class StringConfigParameter(enum.IntEnum):
    __new__: ClassVar[Callable] = ...
    ENV_LOGFILE_PATH: ClassVar[StringConfigParameter] = ...
    LOGGING_LEVEL: ClassVar[StringConfigParameter] = ...
    LOG_DIR: ClassVar[StringConfigParameter] = ...
    _generate_next_value_: ClassVar[Callable] = ...
    _member_map_: ClassVar[dict] = ...
    _member_names_: ClassVar[list] = ...
    _member_type_: ClassVar[type[int]] = ...
    _unhashable_values_: ClassVar[list] = ...
    _unhashable_values_map_: ClassVar[dict] = ...
    _use_args_: ClassVar[bool] = ...
    _value2member_map_: ClassVar[dict] = ...
    def __format__(self, *args, **kwargs) -> str: ...

class _py_anon_pod1:
    fd: int
    handle: int
    ptr: Incomplete
    def __init__(self) -> Any: ...
    @staticmethod
    def from_data(data) -> Any: ...
    @staticmethod
    def from_ptr(intptr_tptr, boolreadonly=...) -> Any: ...
    def __delitem__(self, other) -> None: ...
    def __eq__(self, other: object) -> bool: ...
    def __ge__(self, other: object) -> bool: ...
    def __gt__(self, other: object) -> bool: ...
    def __int__(self) -> int: ...
    def __le__(self, other: object) -> bool: ...
    def __lt__(self, other: object) -> bool: ...
    def __ne__(self, other: object) -> bool: ...
    def __reduce__(self): ...
    def __reduce_cython__(self) -> Any: ...
    def __setitem__(self, index, object) -> None: ...
    def __setstate_cython__(self, __pyx_state) -> Any: ...

class _py_anon_pod2:
    batch: _py_anon_pod3
    ptr: Incomplete
    def __init__(self) -> Any: ...
    @staticmethod
    def from_data(data) -> Any: ...
    @staticmethod
    def from_ptr(intptr_tptr, boolreadonly=...) -> Any: ...
    def __delitem__(self, other) -> None: ...
    def __eq__(self, other: object) -> bool: ...
    def __ge__(self, other: object) -> bool: ...
    def __gt__(self, other: object) -> bool: ...
    def __int__(self) -> int: ...
    def __le__(self, other: object) -> bool: ...
    def __lt__(self, other: object) -> bool: ...
    def __ne__(self, other: object) -> bool: ...
    def __reduce__(self): ...
    def __reduce_cython__(self) -> Any: ...
    def __setitem__(self, index, object) -> None: ...
    def __setstate_cython__(self, __pyx_state) -> Any: ...

class _py_anon_pod3:
    dev_ptr_base: int
    dev_ptr_offset: int
    file_offset: int
    ptr: Incomplete
    size_: int
    def __init__(self) -> Any: ...
    @staticmethod
    def from_data(data) -> Any: ...
    @staticmethod
    def from_ptr(intptr_tptr, boolreadonly=...) -> Any: ...
    def __delitem__(self, other) -> None: ...
    def __eq__(self, other: object) -> bool: ...
    def __ge__(self, other: object) -> bool: ...
    def __gt__(self, other: object) -> bool: ...
    def __int__(self) -> int: ...
    def __le__(self, other: object) -> bool: ...
    def __lt__(self, other: object) -> bool: ...
    def __ne__(self, other: object) -> bool: ...
    def __reduce__(self): ...
    def __reduce_cython__(self) -> Any: ...
    def __setitem__(self, index, object) -> None: ...
    def __setstate_cython__(self, __pyx_state) -> Any: ...

class cuFileError(Exception):
    def __init__(self, status, cu_err=...) -> Any: ...
    def __reduce__(self) -> Any: ...
