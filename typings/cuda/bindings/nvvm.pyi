import _cython_3_1_4
import enum
from typing import Any, Callable, ClassVar

__pyx_capi__: dict
__test__: dict
add_module_to_program: _cython_3_1_4.cython_function_or_method
compile_program: _cython_3_1_4.cython_function_or_method
create_program: _cython_3_1_4.cython_function_or_method
destroy_program: _cython_3_1_4.cython_function_or_method
get_compiled_result: _cython_3_1_4.cython_function_or_method
get_compiled_result_size: _cython_3_1_4.cython_function_or_method
get_error_string: _cython_3_1_4.cython_function_or_method
get_program_log: _cython_3_1_4.cython_function_or_method
get_program_log_size: _cython_3_1_4.cython_function_or_method
ir_version: _cython_3_1_4.cython_function_or_method
lazy_add_module_to_program: _cython_3_1_4.cython_function_or_method
verify_program: _cython_3_1_4.cython_function_or_method
version: _cython_3_1_4.cython_function_or_method

class Result(enum.IntEnum):
    __new__: ClassVar[Callable] = ...
    ERROR_CANCELLED: ClassVar[Result] = ...
    ERROR_COMPILATION: ClassVar[Result] = ...
    ERROR_INVALID_INPUT: ClassVar[Result] = ...
    ERROR_INVALID_IR: ClassVar[Result] = ...
    ERROR_INVALID_OPTION: ClassVar[Result] = ...
    ERROR_INVALID_PROGRAM: ClassVar[Result] = ...
    ERROR_IR_VERSION_MISMATCH: ClassVar[Result] = ...
    ERROR_NO_MODULE_IN_PROGRAM: ClassVar[Result] = ...
    ERROR_OUT_OF_MEMORY: ClassVar[Result] = ...
    ERROR_PROGRAM_CREATION_FAILURE: ClassVar[Result] = ...
    SUCCESS: ClassVar[Result] = ...
    _generate_next_value_: ClassVar[Callable] = ...
    _member_map_: ClassVar[dict] = ...
    _member_names_: ClassVar[list] = ...
    _member_type_: ClassVar[type[int]] = ...
    _unhashable_values_: ClassVar[list] = ...
    _unhashable_values_map_: ClassVar[dict] = ...
    _use_args_: ClassVar[bool] = ...
    _value2member_map_: ClassVar[dict] = ...
    def __format__(self, *args, **kwargs) -> str: ...

class nvvmError(Exception):
    def __init__(self, status) -> Any: ...
    def __reduce__(self) -> Any: ...
