import dataclasses
from cuda.core.experimental._utils.clear_error_support import assert_type as assert_type
from typing import Any, Callable, ClassVar

__test__: dict

class Context:
    _from_ctx: ClassVar[method] = ...
    def __init__(self, *args, **kwargs) -> Any: ...
    def __eq__(self, other: object) -> bool: ...
    def __ge__(self, other: object) -> bool: ...
    def __gt__(self, other: object) -> bool: ...
    def __le__(self, other: object) -> bool: ...
    def __lt__(self, other: object) -> bool: ...
    def __ne__(self, other: object) -> bool: ...
    def __reduce__(self): ...
    def __reduce_cython__(self) -> Any: ...
    def __setstate_cython__(self, __pyx_state) -> Any: ...

class ContextOptions:
    __init__: ClassVar[Callable] = ...
    __dataclass_fields__: ClassVar[dict] = ...
    __dataclass_params__: ClassVar[dataclasses._DataclassParams] = ...
    __eq__: ClassVar[Callable] = ...
    __match_args__: ClassVar[tuple] = ...
    __replace__: ClassVar[Callable] = ...
